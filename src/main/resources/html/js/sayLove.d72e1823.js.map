{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///./src/views/SayLove.vue?0d41","webpack:///src/views/SayLove.vue","webpack:///./src/views/SayLove.vue?8575","webpack:///./src/views/SayLove.vue"],"names":["global","factory","module","exports","this","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","_vm","_h","$createElement","_c","_self","attrs","on","onClickLeft","ref","staticStyle","cropperImg","uploadCropImg","_v","staticRenderFns","imgName","mounted","$router","go","onClickRight","initCropper","component"],"mappings":"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","file":"js/sayLove.d72e1823.js","sourcesContent":["/*!\n * Cropper.js v1.5.6\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-10-04T04:33:48.372Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('van-nav-bar',{attrs:{\"title\":\"我要表白\",\"left-text\":\"返回\",\"left-arrow\":\"\"},on:{\"click-left\":_vm.onClickLeft}}),_c('img',{ref:\"image\",staticStyle:{\"max-width\":\"100%\"},attrs:{\"src\":_vm.cropperImg}}),_c('button',{on:{\"click\":_vm.uploadCropImg}},[_vm._v(\"upload\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <van-nav-bar title=\"我要表白\" left-text=\"返回\" left-arrow @click-left=\"onClickLeft\" />\n    <!-- <div\n      style=\"width: 100%; height: 500px; margin: 20px; border: dashed #cacaca 1px; text-align: center;\"\n    >\n    </div>-->\n\n    <img :src=\"cropperImg\" style=\"max-width: 100%\" ref=\"image\" />\n    <button @click=\"uploadCropImg\">upload</button>\n  </div>\n</template>\n<script>\nimport Cropper from \"cropperjs\";\nimport 'cropperjs/dist/cropper.min.css'\nexport default {\n  data() {\n    return {\n      cropperImg:\n        \"https://cn.bing.com/th?id=OHR.RealSnowflake_ZH-CN5687037252_1920x1080.jpg&rf=LaDigue_1920x1080.jpg&pid=hp\",\n      cropper: '',\n      imgName: \"\"\n      // option: {\n      //   img:\n      //     \"https://cn.bing.com/th?id=OHR.RealSnowflake_ZH-CN5687037252_1920x1080.jpg&rf=LaDigue_1920x1080.jpg&pid=hp\",\n      //   szie: \"2\",\n      //   outType: \"\"\n      // }\n    };\n  },\n  mounted() {\n    // this.initCropper();\n     new Cropper(this.$refs.image, {\n      aspectRatio: 16 / 9,\n      // crop(event) {\n        // console.log(event.detail.x);\n        // console.log(event.detail.y);\n        // console.log(event.detail.width);\n        // console.log(event.detail.height);\n        // console.log(event.detail.rotate);\n        // console.log(event.detail.scaleX);\n        // console.log(event.detail.scaleY);\n      // }\n    })\n  },\n  methods: {\n    onClickLeft() {\n      //   Toast(\"返回\");\n      this.$router.go(-1);\n    },\n    onClickRight() {\n      //   Toast(\"按钮\");\n    },\n    initCropper() {\n      let cropper = new Cropper(this.$refs.img, {\n        aspectRatio: 16 / 9,\n        // crop(event) {\n          // console.log(event.detail.x);\n          // console.log(event.detail.y);\n          // console.log(event.detail.width);\n          // console.log(event.detail.height);\n          // console.log(event.detail.rotate);\n          // console.log(event.detail.scaleX);\n          // console.log(event.detail.scaleY);\n        // }\n      });\n      this.cropper = cropper;\n    },uploadCropImg () {\n        // const _this = this\n        // this.cropper.getCanvasData().toBlob(async function(blob) {\n        //     const params = new FormData()\n        //     params.append('upload_file', blob, _this.imgName)\n        //     console.log(_this.imgName)\n            \n        // }, 'image/jpeg')\n        // console.log(this.cropper.getCanvasData)\n    }\n  }\n\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SayLove.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SayLove.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SayLove.vue?vue&type=template&id=27d4e84b&\"\nimport script from \"./SayLove.vue?vue&type=script&lang=js&\"\nexport * from \"./SayLove.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}